# Rego test for Security Group Ingress Port Range 
# Validating rule security_group_ingress_port_range: Deny Security Groups that allow unrestricted ingress on all ports
package rules.security_group_ingress_port_range

import data.fugue.resource_view.resource_view_input

mock_input = ret {
	ret = resource_view_input with input as mock_plan_input
}

test_security_group_ingress_port_range {
	pol := policy with input as mock_input
	resources := {p.id: p.valid | pol[p]}

	resources["aws_security_group.limited_range"] == true
	resources["aws_security_group.self_referencing"] == true
	resources["aws_security_group.self_referencing_with_cidr_blocks"] == false
	resources["aws_security_group.open_range"] == false
	resources["aws_security_group.no_ingress"] == true
}

# Mock input is generated plan for security_group_ingress_port_range.tf
mock_plan_input = {
	"configuration": {
		"provider_config": {"aws": {
			"expressions": {
				"profile": {"constant_value": "saml"},
				"region": {"constant_value": "us-east-1"},
				"shared_credentials_file": {"constant_value": "~/.aws/creds"},
			},
			"name": "aws",
		}},
		"root_module": {"resources": [
			{
				"address": "aws_security_group.limited_range",
				"expressions": {
					"description": {"constant_value": "Allow TLS inbound traffic"},
					"name": {"constant_value": "allow_tls"},
					"tags": {"constant_value": {"Name": "allow_tls"}},
				},
				"mode": "managed",
				"name": "limited_range",
				"provider_config_key": "aws",
				"schema_version": 1,
				"type": "aws_security_group",
			},
			{
				"address": "aws_security_group.no_ingress",
				"expressions": {"name": {"constant_value": "noingress"}},
				"mode": "managed",
				"name": "no_ingress",
				"provider_config_key": "aws",
				"schema_version": 1,
				"type": "aws_security_group",
			},
			{
				"address": "aws_security_group.open_range",
				"expressions": {"name": {"constant_value": "open"}},
				"mode": "managed",
				"name": "open_range",
				"provider_config_key": "aws",
				"schema_version": 1,
				"type": "aws_security_group",
			},
			{
				"address": "aws_security_group.self_referencing",
				"expressions": {
					"description": {"constant_value": "Allow all traffic within SG"},
					"name": {"constant_value": "allow_sg_local"},
					"tags": {"constant_value": {"Name": "allow_sg_local"}},
				},
				"mode": "managed",
				"name": "self_referencing",
				"provider_config_key": "aws",
				"schema_version": 1,
				"type": "aws_security_group",
			},
			{
				"address": "aws_security_group.self_referencing_with_cidr_blocks",
				"expressions": {
					"description": {"constant_value": "Allow all traffic within SG and cidr blocks"},
					"name": {"constant_value": "allow_sg_local_with_cidr_blocks"},
					"tags": {"constant_value": {"Name": "allow_sg_local_with_cidr_blocks"}},
				},
				"mode": "managed",
				"name": "self_referencing_with_cidr_blocks",
				"provider_config_key": "aws",
				"schema_version": 1,
				"type": "aws_security_group",
			},
		]},
	},
	"format_version": "0.1",
	"planned_values": {"root_module": {"resources": [
		{
			"address": "aws_security_group.limited_range",
			"mode": "managed",
			"name": "limited_range",
			"provider_name": "aws",
			"schema_version": 1,
			"type": "aws_security_group",
			"values": {
				"description": "Allow TLS inbound traffic",
				"egress": [{
					"cidr_blocks": ["0.0.0.0/0"],
					"description": "",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": false,
					"to_port": 0,
				}],
				"ingress": [{
					"cidr_blocks": [],
					"description": "TLS from VPC",
					"from_port": 443,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "tcp",
					"security_groups": [],
					"self": false,
					"to_port": 443,
				}],
				"name": "allow_tls",
				"revoke_rules_on_delete": false,
				"tags": {"Name": "allow_tls"},
				"timeouts": null,
			},
		},
		{
			"address": "aws_security_group.no_ingress",
			"mode": "managed",
			"name": "no_ingress",
			"provider_name": "aws",
			"schema_version": 1,
			"type": "aws_security_group",
			"values": {
				"description": "Managed by Terraform",
				"egress": [{
					"cidr_blocks": ["0.0.0.0/0"],
					"description": "",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": false,
					"to_port": 0,
				}],
				"name": "noingress",
				"revoke_rules_on_delete": false,
				"tags": null,
				"timeouts": null,
			},
		},
		{
			"address": "aws_security_group.open_range",
			"mode": "managed",
			"name": "open_range",
			"provider_name": "aws",
			"schema_version": 1,
			"type": "aws_security_group",
			"values": {
				"description": "Managed by Terraform",
				"egress": [{
					"cidr_blocks": ["0.0.0.0/0"],
					"description": "",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": false,
					"to_port": 0,
				}],
				"ingress": [{
					"cidr_blocks": [],
					"description": "Open from VPC",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": false,
					"to_port": 0,
				}],
				"name": "open",
				"revoke_rules_on_delete": false,
				"tags": null,
				"timeouts": null,
			},
		},
		{
			"address": "aws_security_group.self_referencing",
			"mode": "managed",
			"name": "self_referencing",
			"provider_name": "aws",
			"schema_version": 1,
			"type": "aws_security_group",
			"values": {
				"description": "Allow all traffic within SG",
				"egress": [{
					"cidr_blocks": ["0.0.0.0/0"],
					"description": "",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": false,
					"to_port": 0,
				}],
				"ingress": [{
					"cidr_blocks": [],
					"description": "All traffic within SG",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": true,
					"to_port": 0,
				}],
				"name": "allow_sg_local",
				"revoke_rules_on_delete": false,
				"tags": {"Name": "allow_sg_local"},
				"timeouts": null,
			},
		},
		{
			"address": "aws_security_group.self_referencing_with_cidr_blocks",
			"mode": "managed",
			"name": "self_referencing_with_cidr_blocks",
			"provider_name": "aws",
			"schema_version": 1,
			"type": "aws_security_group",
			"values": {
				"description": "Allow all traffic within SG and cidr blocks",
				"egress": [{
					"cidr_blocks": ["0.0.0.0/0"],
					"description": "",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": false,
					"to_port": 0,
				}],
				"ingress": [{
					"cidr_blocks": ["10.0.0.0/8"],
					"description": "All traffic within SG and given cidr blocks",
					"from_port": 0,
					"ipv6_cidr_blocks": [],
					"prefix_list_ids": [],
					"protocol": "-1",
					"security_groups": [],
					"self": true,
					"to_port": 0,
				}],
				"name": "allow_sg_local_with_cidr_blocks",
				"revoke_rules_on_delete": false,
				"tags": {"Name": "allow_sg_local_with_cidr_blocks"},
				"timeouts": null,
			},
		},
	]}},
	"resource_changes": [
		{
			"address": "aws_security_group.limited_range",
			"change": {
				"actions": ["create"],
				"after": {
					"description": "Allow TLS inbound traffic",
					"egress": [{
						"cidr_blocks": ["0.0.0.0/0"],
						"description": "",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": false,
						"to_port": 0,
					}],
					"ingress": [{
						"cidr_blocks": [],
						"description": "TLS from VPC",
						"from_port": 443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "tcp",
						"security_groups": [],
						"self": false,
						"to_port": 443,
					}],
					"name": "allow_tls",
					"revoke_rules_on_delete": false,
					"tags": {"Name": "allow_tls"},
					"timeouts": null,
				},
				"after_unknown": {
					"arn": true,
					"egress": [{
						"cidr_blocks": [false],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"id": true,
					"ingress": [{
						"cidr_blocks": [],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"name_prefix": true,
					"owner_id": true,
					"tags": {},
					"vpc_id": true,
				},
				"before": null,
			},
			"mode": "managed",
			"name": "limited_range",
			"provider_name": "aws",
			"type": "aws_security_group",
		},
		{
			"address": "aws_security_group.no_ingress",
			"change": {
				"actions": ["create"],
				"after": {
					"description": "Managed by Terraform",
					"egress": [{
						"cidr_blocks": ["0.0.0.0/0"],
						"description": "",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": false,
						"to_port": 0,
					}],
					"name": "noingress",
					"revoke_rules_on_delete": false,
					"tags": null,
					"timeouts": null,
				},
				"after_unknown": {
					"arn": true,
					"egress": [{
						"cidr_blocks": [false],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"id": true,
					"ingress": true,
					"name_prefix": true,
					"owner_id": true,
					"vpc_id": true,
				},
				"before": null,
			},
			"mode": "managed",
			"name": "no_ingress",
			"provider_name": "aws",
			"type": "aws_security_group",
		},
		{
			"address": "aws_security_group.open_range",
			"change": {
				"actions": ["create"],
				"after": {
					"description": "Managed by Terraform",
					"egress": [{
						"cidr_blocks": ["0.0.0.0/0"],
						"description": "",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": false,
						"to_port": 0,
					}],
					"ingress": [{
						"cidr_blocks": [],
						"description": "Open from VPC",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": false,
						"to_port": 0,
					}],
					"name": "open",
					"revoke_rules_on_delete": false,
					"tags": null,
					"timeouts": null,
				},
				"after_unknown": {
					"arn": true,
					"egress": [{
						"cidr_blocks": [false],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"id": true,
					"ingress": [{
						"cidr_blocks": [],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"name_prefix": true,
					"owner_id": true,
					"vpc_id": true,
				},
				"before": null,
			},
			"mode": "managed",
			"name": "open_range",
			"provider_name": "aws",
			"type": "aws_security_group",
		},
		{
			"address": "aws_security_group.self_referencing",
			"change": {
				"actions": ["create"],
				"after": {
					"description": "Allow all traffic within SG",
					"egress": [{
						"cidr_blocks": ["0.0.0.0/0"],
						"description": "",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": false,
						"to_port": 0,
					}],
					"ingress": [{
						"cidr_blocks": [],
						"description": "All traffic within SG",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": true,
						"to_port": 0,
					}],
					"name": "allow_sg_local",
					"revoke_rules_on_delete": false,
					"tags": {"Name": "allow_sg_local"},
					"timeouts": null,
				},
				"after_unknown": {
					"arn": true,
					"egress": [{
						"cidr_blocks": [false],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"id": true,
					"ingress": [{
						"cidr_blocks": [],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"name_prefix": true,
					"owner_id": true,
					"tags": {},
					"vpc_id": true,
				},
				"before": null,
			},
			"mode": "managed",
			"name": "self_referencing",
			"provider_name": "aws",
			"type": "aws_security_group",
		},
		{
			"address": "aws_security_group.self_referencing_with_cidr_blocks",
			"change": {
				"actions": ["create"],
				"after": {
					"description": "Allow all traffic within SG and cidr blocks",
					"egress": [{
						"cidr_blocks": ["0.0.0.0/0"],
						"description": "",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": false,
						"to_port": 0,
					}],
					"ingress": [{
						"cidr_blocks": ["10.0.0.0/8"],
						"description": "All traffic within SG and given cidr blocks",
						"from_port": 0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"protocol": "-1",
						"security_groups": [],
						"self": true,
						"to_port": 0,
					}],
					"name": "allow_sg_local_with_cidr_blocks",
					"revoke_rules_on_delete": false,
					"tags": {"Name": "allow_sg_local_with_cidr_blocks"},
					"timeouts": null,
				},
				"after_unknown": {
					"arn": true,
					"egress": [{
						"cidr_blocks": [false],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"id": true,
					"ingress": [{
						"cidr_blocks": [false],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids": [],
						"security_groups": [],
					}],
					"name_prefix": true,
					"owner_id": true,
					"tags": {},
					"vpc_id": true,
				},
				"before": null,
			},
			"mode": "managed",
			"name": "self_referencing_with_cidr_blocks",
			"provider_name": "aws",
			"type": "aws_security_group",
		},
	],
	"terraform_version": "0.12.19",
}
